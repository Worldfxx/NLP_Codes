# Required Libraries
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, confusion_matrix

# Load the data
df = pd.read_csv('sentiment_data.csv')

# Vectorize the text data
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['Text'])

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, df['Sentiment'], test_size=0.2, random_state=42)

# Train the Naive Bayes model
nb = MultinomialNB()
nb.fit(X_train, y_train)

# Make predictions on the test set
predictions = nb.predict(X_test)

# Print the accuracy score and confusion matrix
print("Accuracy Score: ", accuracy_score(y_test, predictions))
print("Confusion Matrix: \n", confusion_matrix(y_test, predictions))

# Function to predict sentiment
def predict_sentiment(sentence):
   transformed_sentence = vectorizer.transform([sentence])
   prediction = nb.predict(transformed_sentence)
   return prediction[0]

# Test the function
print(predict_sentiment("I love this product!"))
print(predict_sentiment("This product is terrible."))
